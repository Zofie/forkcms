/*
  Typography
*/

// baseline formula based on the baseline unit
// use: @include text-dimensions(#font-size, #line-height, #margin-bottom, #padding-top)

$baseline-unit: $alpha-font-size * $alpha-line-height;
$basefontpercent: $alpha-font-size/16 * 100;

@mixin text-dimensions($fs: 16, $lh: 1, $mb: 1, $pt: 0, $pb: 0){
  // use this for rems
  // font-size: #{$fs}px;
  // font-size: #{$fs / $alpha-font-size}rem;
  font-size: #{$fs / $alpha-font-size}em;
  line-height: #{($baseline-unit / $fs) * $lh}em;
  margin-bottom: #{($baseline-unit / $fs) * $mb}em;
  @if $pt > 0 {
    padding-top: #{($baseline-unit / $fs) * $pt}em;
  }
  @if $pb > 0 {
    padding-bottom: #{($baseline-unit / $fs) * $pt}em;
  }
}

@mixin input-dimensions($fs: 16, $lh: 1, $mb: 1, $pt: 0, $pb: 0){
  // use this for rems
  // font-size: #{$fs}px;
  // font-size: #{$fs / $alpha-font-size}rem;
  font-size: #{$fs / $alpha-font-size}em;
  line-height: #{($baseline-unit / $fs) * $lh}em;
  height:  #{($baseline-unit / $fs) * $lh}em;
  margin-bottom: #{($baseline-unit / $fs) * $mb}em;
  @if $pt > 0 {
    padding-top: #{($baseline-unit / $fs) * $pt}em;
  }
  @if $pb > 0 {
    padding-bottom: #{($baseline-unit / $fs) * $pt}em;
  }
}
